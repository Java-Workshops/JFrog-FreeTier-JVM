<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.helidon.applications</groupId>
    <artifactId>helidon-se</artifactId>
    <version>2.4.0</version>
    <relativePath/>
  </parent>

  <groupId>io.helidon.examples</groupId>
  <artifactId>helidon-quickstart-se</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Free Tier DevSecOps Workshop</name>

  <inceptionYear>2021</inceptionYear>
  <organization>
    <name>Sven Ruppert</name>
    <url>https://github.com/svenruppert</url>
  </organization>
  <url>https://github.com/Java-Workshops/JFrog-FreeTier-JVM</url>

  <scm>
    <url>https://github.com/Java-Workshops/JFrog-FreeTier-JVM</url>
    <connection>
      scm:git:https://github.com/Java-Workshops/JFrog-FreeTier-JVM.git
    </connection>
    <developerConnection>
      scm:git:https://github.com/Java-Workshops/JFrog-FreeTier-JVM.git
    </developerConnection>
    <tag>HEAD</tag>
  </scm>
  <developers>
    <developer>
      <name>Sven Ruppert</name>
      <email>sven.ruppert@gmail.com</email>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>
  <issueManagement>
    <system>Github</system>
    <url>
      https://github.com/Java-Workshops/JFrog-FreeTier-JVM/issues
    </url>
  </issueManagement>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <properties>
    <mainClass>io.helidon.examples.quickstart.se.Main</mainClass>

    <jdk.version>11</jdk.version>
    <!--technical-->
    <maven.compiler.release>${jdk.version}</maven.compiler.release> <!--release makes source and target-->
    <maven.compiler.source>${jdk.version}</maven.compiler.source> <!--redundant, but IntelliJ doesn't-->
    <maven.compiler.target>${jdk.version}</maven.compiler.target> <!--use release when importing-->

    <!--    <maven.compiler.testRelease>11</maven.compiler.testRelease>-->
    <maven.compiler.testSource>${jdk.version}</maven.compiler.testSource>
    <maven.compiler.testTarget>${jdk.version}</maven.compiler.testTarget>
    <minimum-maven.version>3.3.9</minimum-maven.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>


    <!--TDD jUnit5-->
    <pitest.version>1.5.2</pitest.version>
    <pitest-junit5-plugin.version>0.12</pitest-junit5-plugin.version>
    <pitest-prod-classes>org.rapidpm.*</pitest-prod-classes>
    <pitest-test-classes>junit.org.rapidpm*</pitest-test-classes>

  </properties>

  <distributionManagement>
    <repository>
      <id>deploy-repo-maven</id>
      <name>deploy-repo-maven</name>
      <url>https://svenr.jfrog.io/artifactory/maven-release/</url>
    </repository>
    <snapshotRepository>
      <id>deploy-repo-maven-snapshots</id>
      <name>deploy-repo-maven-snapshots</name>
      <url>https://svenr.jfrog.io/artifactory/maven-snapshot/</url>
    </snapshotRepository>
  </distributionManagement>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>libs-release</name>
      <url>https://svenr.jfrog.io/artifactory/maven-release/</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <id>snapshots</id>
      <name>libs-snapshot</name>
      <url>https://svenr.jfrog.io/artifactory/maven-snapshot/</url>
    </repository>
    <repository>
      <id>maven_central</id>
      <name>Maven Central</name>
      <url>https://repo.maven.apache.org/maven2/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>libs-release</name>
      <url>https://svenr.jfrog.io/artifactory/maven-release/</url>
    </pluginRepository>
    <pluginRepository>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <id>snapshots</id>
      <name>libs-snapshot</name>
      <url>https://svenr.jfrog.io/artifactory/maven-snapshot/</url>
    </pluginRepository>
  </pluginRepositories>

 <dependencies>
   <dependency>
     <groupId>io.helidon.bundles</groupId>
     <artifactId>helidon-bundles-webserver</artifactId>
   </dependency>
   <dependency>
     <groupId>io.helidon.config</groupId>
     <artifactId>helidon-config-yaml</artifactId>
   </dependency>
   <dependency>
     <groupId>io.helidon.health</groupId>
     <artifactId>helidon-health</artifactId>
   </dependency>
   <dependency>
     <groupId>io.helidon.health</groupId>
     <artifactId>helidon-health-checks</artifactId>
   </dependency>
   <dependency>
     <groupId>io.helidon.metrics</groupId>
     <artifactId>helidon-metrics</artifactId>
   </dependency>
   <dependency>
     <groupId>org.junit.jupiter</groupId>
     <artifactId>junit-jupiter-api</artifactId>
     <scope>test</scope>
   </dependency>
   <dependency>
     <groupId>io.helidon.webclient</groupId>
     <artifactId>helidon-webclient</artifactId>
<!--     <exclusions>-->
<!--       <exclusion>-->
<!--         <groupId>io.netty</groupId>-->
<!--         <artifactId>netty-codec</artifactId>-->
<!--       </exclusion>-->
<!--     </exclusions>-->
   </dependency>



   <dependency>
     <groupId>io.helidon.integrations.microstream</groupId>
     <artifactId>helidon-integrations-microstream</artifactId>
   </dependency>
 </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-libs</id>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.helidon.build-tools</groupId>
        <artifactId>helidon-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>third-party-license-report</id>
          </execution>
        </executions>
      </plugin>
      <!--Enable mutation testing-->
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>${pitest-junit5-plugin.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <threads>2</threads>
          <outputFormats>
            <outputFormat>XML</outputFormat>
            <outputFormat>HTML</outputFormat>
          </outputFormats>
          <targetClasses>
            <param>${pitest-prod-classes}</param>
            <!--<param>org.reflections.*</param>-->
          </targetClasses>
          <targetTests>
            <param>${pitest-test-classes}</param>
          </targetTests>
        </configuration>
      </plugin>

    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <!-- select non-aggregate reports -->
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
</project>